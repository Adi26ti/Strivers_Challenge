public:
    vector<string> all_longest_common_subsequences(string s, string t) {
        // Code here
        int n=s.size(),m=t.size();
        vector<vector<int>>a(n+1,vector<int>(m+1,0));
        vector<vector<set<string>>>b(n+1,vector<set<string>>(m+1));
        for(int i=0;i<=n;i++)
        {
            for(int j=0;j<=m;j++)
            {
                if(i==0 || j==0) b[i][j].insert("");
                else if(s[i-1]==t[j-1]) 
                {
                    for(const string &c:b[i-1][j-1]) b[i][j].insert(c+s[i-1]);
                    a[i][j]=1+a[i-1][j-1];
                }
                else
                {
                    if(a[i-1][j]>=a[i][j-1])
                    {
                        for(const string &c:b[i-1][j]) b[i][j].insert(c);
                    }
                    if(a[i-1][j]<=a[i][j-1])
                    {
                        for(const string &c:b[i][j-1]) b[i][j].insert(c);
                    }
                    a[i][j]=max(a[i-1][j],a[i][j-1]);
                }
            }
        }
        
        return vector<string>(b[n][m].begin(),b[n][m].end());
    }
